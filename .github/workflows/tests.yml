name: CI

on:
  push:
    branches: [master]
    tags:
      - 'v*'
  pull_request:

jobs:

  pre-commit:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - uses: pre-commit/action@v2.0.0

  tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]
        os: [ubuntu-latest]

    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_DB: test_${{ matrix.backend }}
          POSTGRES_PASSWORD: ''
          POSTGRES_HOST_AUTH_METHOD: trust
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      rabbitmq:
        image: rabbitmq:latest
        ports:
          - 5672:5672

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Installation (deps and package)
      # we install with flit --pth-file,
      # so that coverage will be recorded up for the module
      run: |
        pip install flit
        flit install --deps=production --extras=test --pth-file

    - name: Run reentry scan
      run: reentry scan

    - name: Run pytest
      run: |
        pytest --cov=aiida_archive --cov-report=xml --cov-report=term-missing

    - name: Upload to Codecov
      if: matrix.python-version == 3.7
      uses: codecov/codecov-action@v1
      with:
        name: pytests-py3.7
        flags: pytests
        file: ./coverage.xml
        fail_ci_if_error: true

  publish:
    name: Publish to PyPi
    needs: [pre-commit, tests]
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
    runs-on: ubuntu-latest
    steps:
    - name: Checkout source
      uses: actions/checkout@v2
    - name: Set up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - name: install flit
      run: |
        pip install flit~=3.0
    - name: Build and publish
      run: |
        flit publish
      env:
        FLIT_USERNAME: __token__
        FLIT_PASSWORD: ${{ secrets.PYPI_KEY }}
